#!/bin/sh
# postinst script for jarvis
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        # Soft link our Jarvis Demo Application XML file.
        if [ ! -e /etc/jarvis/demo.xml ]; then
            ln -s /usr/share/jarvis/demo/etc/demo.xml /etc/jarvis/demo.xml
        fi

        # Copy the demo database.
        if [ ! -e /var/lib/jarvis/demo/demo.db ]; then
            mkdir -p /var/lib/jarvis/demo
            cp /usr/share/jarvis/demo/db/demo-empty.db /var/lib/jarvis/demo/demo.db

            set +e
            ID=`id -u www-data || id -u apache`;
            set -e
            if [ -n "$ID" ]; then
                chown -R $ID /var/lib/jarvis/demo
            fi
        fi

        # Link in our Jarvis Apache configuration files to Apache - pre apache 2.4
        if [ -d /etc/apache2/conf.d/ ] && [ ! -e /etc/apache2/conf.d/jarvis.conf ] && [ ! -e /etc/apache2/conf.d/jarvis-mod-perl.conf ] ; then
            ln -s /etc/jarvis/apache/jarvis.conf /etc/apache2/conf.d/jarvis.conf
        fi
        # Link in our Jarvis Apache configuration files to Apache - apache 2.4+
        if [ -d /etc/apache2/conf-available/ ] && [ ! -e /etc/apache2/conf-available/jarvis.conf ] && [ ! -e /etc/apache2/conf-available/jarvis-mod-perl.conf ] ; then
            cp /etc/jarvis/apache/jarvis.conf /etc/apache2/conf-available/jarvis.conf
            ln -s /etc/apache2/conf-available/jarvis.conf /etc/apache2/conf-enabled/jarvis.conf
            a2enmod cgi
        fi

        # Install clean sessions systemd script.
        if [ -d /usr/lib/systemd/system/ ]; then
            echo "Installing Jarvis Session Cleanup as a service"
            cp /usr/share/jarvis/etc/systemd/jarvis-session-cleanup.service /usr/lib/systemd/system/
            cp /usr/share/jarvis/etc/systemd/jarvis-session-cleanup.timer   /usr/lib/systemd/system/

            # Replace Apache groups for deb.
            sed -i 's/User=apache/User=www-data/g' /usr/lib/systemd/system/jarvis-session-cleanup.service
            sed -i 's/Group=apache/Group=www-data/g' /usr/lib/systemd/system/jarvis-session-cleanup.service

            echo "Update service configuration as required and start via: systemctl start jarvis-session-cleanup.timer"
            echo "Can be permanently enabled with: systemctl enable jarvis-session-cleanup.timer"
        else
            echo "No systemd. NOT installing Clean Sessions as a service."
        fi

	# Don't restart apache.  It's not nice.
        # [ -x `which apache2ctl` ] && apache2ctl restart
	echo "Apache requires a restart for changes to take effect."
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
