<?xml version="1.0" encoding="utf-8"?>
<jarvis>
    <include file="/usr/share/jarvis/demo/etc/include1.xml"/>
    <include file="/usr/share/jarvis/demo/etc/include2.xml"/>

    <app format="json" debug="yes" dump="no" return_json_as_text="yes" dataset_route="yes">
        <!-- This is where our <dataset>.xml are all stored -->
	    <dataset_dir>/usr/share/jarvis/demo/dataset</dataset_dir>

        <!-- Demo Global Hook -->
        <default_libs>
            <lib path="/usr/share/jarvis/demo/hook"/>
        </default_libs>

        <hook module="Global">
            <parameter name="quota" value="4 Gazillion"/>
        </hook>

        <!-- This is a server-side RESTful "router", it maps URLS to datasets
             and assigns names to RESTful parameters.

             NOTE: The first one will match, so when you have general and specific
             cases, be sure to put the LONGEST (most specific) case first.

             The "restful" type applies for "json.rest" format requests.
                restful="array" (default) - Return an array of 0, 1 or more element.
                restful="singleton" - Return exactly 1 element, NO array wrapper.  Return 404 on no data.  Die if > 1 element.    
        -->
        <router>
            <route path="/file_download/:boat_class" dataset="FileDownload"/>
            <route path="/file_download3/:boat_class" dataset="FileDownload3"/>
            <route path="/boat_object/:id" dataset="boat_object" presentation="singleton"/>
            <route path="/boat_class/:boat_class" dataset="boat_class"/>
            <route path="/boat_singleton/:id" dataset="boat" presentation="singleton"/>
            <route path="/boat/by-class/:boat_class" dataset="boat"/>
            <route path="/boat/:id" dataset="boat"/>
        </router>

        <!-- For server-side paging and sorting -->
        <page_limit_param>limit</page_limit_param>
        <page_start_param>start</page_start_param>
        <sort_field_param>sort</sort_field_param>
        <sort_dir_param>dir</sort_dir_param>

        <!-- XML Habitat. Contents are entirely free form.  This is 100% example only.
             For requests with &format=xml we will include the <habitat></habitat>.

             NOTE: Your HABITAT is PUBLIC.  Login is not required in order
             to view the habitat.
        -->
        <habitat>
            <install_type>production</install_type>
            <parameter name="pname" value="some_value"/>
            <parameter name="another" value="a_different_value"/>
        </habitat>

        <!-- This defines how our sessions are stored.  See CGI::Session. -->
        <sessiondb store="driver:file;serializer:default;id:md5" expiry="+2h" cookie="DEMO_CGISESSID">
            <parameter name="Directory" value="/var/lib/jarvis/demo/sessions"/>
        </sessiondb>

        <!-- Global default parameters -->
        <default_parameters>
            <parameter name="max_rows" value="500"/>
            <parameter name="__LIMIT" value="2"/>
        </default_parameters>

        <!-- This gives a sample configuration where the Login validation is performed by
             database lookup.  These values should work with the demo SQLite
             database SQL included with this distribution.
             -->
        <login module="Jarvis::Login::Database">
            <parameter name="user_table" value="users"/>
            <parameter name="user_username_column" value="name"/>
            <parameter name="user_password_column" value="password"/>
            <parameter name="group_table" value="groups"/>
            <parameter name="group_username_column" value="name"/>
            <parameter name="group_group_column" value="group_name"/>
            <parameter name="encryption" value="md5"/>
            <parameter name="salt_prefix_len" value="2"/>
        </login>

        <!-- This defines our database connection.  SQLite in our case. -->
        <database connect="dbi:SQLite:dbname=/var/lib/jarvis/demo/demo.db" username="" password="" post_connect="PRAGMA foreign_keys = ON"/>

        <!-- And a secondary mongoDB database. -->
        <database type="mongo" name="shipdb" connect="mongodb://localhost" username="" password="">
            <dbh_attributes>
                <attribute name ="db_name" value="demo"/>
                <attribute name ="subparam.path" value="/fred/here"/>
                <attribute name ="subparam.gone_key" value="GONE!"/>
            </dbh_attributes>
        </database>

        <!-- This plugin is used to allow admin users to reset any user's password. -->
        <plugin dataset="SetPassword" access="*" lib="/usr/share/jarvis/demo" module="plugin::SetPassword" add_headers="yes"/>

        <!-- This is a simple file download demo plugin, exists only in the main demo.xml. -->
        <plugin dataset="FileDownload" access="**" lib="/usr/share/jarvis/demo" module="plugin::FileDownload" add_headers="yes" mime_type="text/plain">
            <parameter name="interview" value="Cross-Sectional"/>
        </plugin>

        <!-- This one exist in demo.xml and include.xml, but this one will take priority. -->
        <plugin dataset="FileDownload3" access="**" lib="/usr/share/jarvis/demo" module="plugin::FileDownload" add_headers="yes" mime_type="text/plain">
            <parameter name="interview" value="Cross-Sectional"/>
        </plugin>

        <!-- This is a very simple 'exec' action.  It uses "echo" to show you the supplied
             command line parameters.  Access it via:

             http://localhost/jarvis-agent/demo/echo

             NOTE: We set access = "**", so login is not required in order to access this particular exec.
             -->
        <exec dataset="echo" access="**" command="echo" add_headers="yes" filename_parameter="filename"  mime_type="text/plain"/>
    </app>
</jarvis>
